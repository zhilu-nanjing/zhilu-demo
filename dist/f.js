!function(r){var e={};function t(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return r[n].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=r,t.c=e,t.d=function(r,e,n){t.o(r,e)||Object.defineProperty(r,e,{enumerable:!0,get:n})},t.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},t.t=function(r,e){if(1&e&&(r=t(r)),8&e)return r;if(4&e&&"object"==typeof r&&r&&r.__esModule)return r;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:r}),2&e&&"string"!=typeof r)for(var a in r)t.d(n,a,function(e){return r[e]}.bind(null,a));return n},t.n=function(r){var e=r&&r.__esModule?function(){return r.default}:function(){return r};return t.d(e,"a",e),e},t.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},t.p="",t(t.s=6)}({22:function(r,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.str2Re=function(r){return new RegExp(r,"g")},e.calendarPattern=e.datePattern2=e.datePattern=e.letterOperatorWithDollorPrex=e.letterOperatorWithDollorEnd=e.letterAndLetterOperator=e.letterOperatorWithDollor=e.letterOperatorIgnoreBracket=e.letterOperator=e.blankOperator=e.logicOperator=void 0;e.logicOperator="([(-\\/,+*，=^&])";e.blankOperator="(^\\s*)|(\\s*$)";e.letterOperator="^[A-Z]+\\d+$";e.letterOperatorIgnoreBracket="^[A-Z]+\\d+$";e.letterOperatorWithDollor="^\\$[A-Z]+\\$\\d+$";e.letterAndLetterOperator="^[A-Za-z]+\\d+:[A-Za-z]+\\d+$";e.letterOperatorWithDollorEnd="^[A-Z]+\\$\\d+$";e.letterOperatorWithDollorPrex="^\\$[A-Z]+\\d+$";e.datePattern=["^(\\d{4})[-/](\\d{1,2})[-/](\\d{1,2})$","^(\\d{4})年(\\d{1,2})月(\\d{1,2})日$"];e.datePattern2="((^((1[8-9]\\d{2})|([2-9]\\d{3}))([-\\/\\._])(10|12|0?[13578])([-\\/\\._])(3[01]|[12][0-9]|0?[1-9])$)|(^((1[8-9]\\d{2})|([2-9]\\d{3}))([-\\/\\._])(11|0?[469])([-\\/\\._])(30|[12][0-9]|0?[1-9])$)|(^((1[8-9]\\d{2})|([2-9]\\d{3}))([-\\/\\._])(0?2)([-\\/\\._])(2[0-8]|1[0-9]|0?[1-9])$)|(^([2468][048]00)([-\\/\\._])(0?2)([-\\/\\._])(29)$)|(^([3579][26]00)([-\\/\\._])(0?2)([-\\/\\._])(29)$)|(^([1][89][0][48])([-\\/\\._])(0?2)([-\\/\\._])(29)$)|(^([2-9][0-9][0][48])([-\\/\\._])(0?2)([-\\/\\._])(29)$)|(^([1][89][2468][048])([-\\/\\._])(0?2)([-\\/\\._])(29)$)|(^([2-9][0-9][2468][048])([-\\/\\._])(0?2)([-\\/\\._])(29)$)|(^([1][89][13579][26])([-\\/\\._])(0?2)([-\\/\\._])(29)$)|(^([2-9][0-9][13579][26])([-\\/\\._])(0?2)([-\\/\\._])(29)$))";e.calendarPattern="^\\d{4}-\\d{1,2}-\\d{1,2}$"},6:function(r,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.isLegal=function(r){var e=function(r){return"("===r||"["===r||"{"===r||"/*"===r?0:")"===r||"]"===r||"}"===r||"*/"===r?1:2},t=[];if(null!==r||""!==r||void 0!==r){for(var n=0;n<r.length;n++){var a=r.charAt(n);if(0===e(a))t.push(a);else if(!(1!==e(a)||0!==t.length&&(o=t.pop(),u=a,"("===o&&")"===u||"{"===o&&"}"===u||"["===o&&"]"===u||"/*"===o&&"*/"===u)))return!1}return 0===t.length}var o,u},e.distinct=function(r){return function(r){return function(r){if(Array.isArray(r)){for(var e=0,t=new Array(r.length);e<r.length;e++)t[e]=r[e];return t}}(r)||function(r){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r))return Array.from(r)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}(new Set(r))},e.changeFormula=function(r){for(var e=0;e<r.length;e++){var t=r[e];-1===t.search(/^[A-Za-z]+\d+:[A-Za-z]+\d+$/)&&(r[e]="".concat(t,":").concat(t))}return r},e.deepCopy=function r(e){var t=Array.isArray(e)?[]:{};for(var n in e)e.hasOwnProperty(n)&&("object"===a(e[n])&&null!==e[n]?t[n]=r(e[n]):t[n]=e[n]);return t},e.positionAngle=e.cuttingByPos2=e.cuttingByPosEnd2=e.isSheetVale=e.splitStr=e.value2absolute=e.cuttingByPosEnd=e.operation3=e.cutFirst=e.cuttingByPos=e.isAbsoluteValue=e.cutting2=e.cutting=e.cutStr=e.operation=e.operator=void 0;var n=t(22);function a(r){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}var o=["+","-","*","/","&","^","(",",","="," "," ","，"];e.operator=o;var u=["+","-","*","/","&","^","(",",","="," ","，"],i=["+","-","*","/","&","^","(",",","=",")","，"],l=function(r){for(var e=0;e<o.length;e++)if(o[e]===r)return 1;return 0};e.operation=l;var c=function(r){for(var e=0;e<o.length;e++)if(u[e]===r)return 1;return 0};e.operation3=c;var s=function(r){for(var e=0;e<i.length;e++)if(i[e]===r)return 1;return 0};e.value2absolute=function(r){for(var e="",t=!1,n=0;n<r.length;n++)!1===t&&1*r[n]>=0&&1*r[n]<=9&&(e+="$",t=!0),e+=r[n];return{s1:e,s2:"$"+r,s3:"$"+e}};e.cutStr=function(r){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if("="!==(r=(r+="").toUpperCase())[0])return[];for(var a=r.split((0,n.str2Re)(n.logicOperator)),o=0;o<a.length;o++)a[o]=a[o].replace((0,n.str2Re)(n.blankOperator),"");var u=[],i=0;return a.filter((function(r){var o=!0;a.length>i+1&&(-1!==a[i+1].indexOf("(")&&(o=!1));if(t&&o)-1===(r=r.replace(/\$/g,"")).search((0,n.str2Re)(n.letterOperator))&&-1===r.search((0,n.str2Re)(n.letterAndLetterOperator))||-1===u.indexOf(r)&&u.push(r);else if(o){if(-1!==r.search((0,n.str2Re)(n.letterOperator))||-1!==r.search((0,n.str2Re)(n.letterOperatorWithDollor))||-1!==r.search((0,n.str2Re)(n.letterOperatorWithDollorEnd))||-1!==r.search((0,n.str2Re)(n.letterOperatorWithDollorPrex)))-1!==u.indexOf(r)&&!0!==e||u.push(r);else-1!==r.replace(/\$/g,"").search((0,n.str2Re)(n.letterAndLetterOperator))&&u.push(r)}i+=1})),u};e.cutFirst=function(r){for(var e="",t=0;t<r.length;t++){if(s(r[t]))return e;e+=r[t]}return e};e.cuttingByPos=function(r,e){for(var t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n="",a=!1,o=e-1;o>0&&!1===a;o--)!1===(a=!1===t?1===c(r[o]):1===l(r[o]))&&(n+=r[o]);return t&&(n=n.replace(/\s/g,"")),(n=n.split("").reverse().join("")).toUpperCase()};e.cuttingByPos2=function(r,e){for(var t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n="",a=!1,o=e-1;o>0&&!1===a;o--)!1===(a=!1===t?1===c(r[o]):1===l(r[o]))&&(n+=r[o]);return t&&(n=n.replace(/\s/g,"")),n=n.split("").reverse().join("")};e.cuttingByPosEnd=function(r,e){for(var t="",n=!1,a=e-1;a<r.length&&!1===n;a++)!1===(n=1===l(r[a]))&&")"!==r[a]&&(t+=r[a]);return t.toUpperCase()};e.cuttingByPosEnd2=function(r,e){for(var t="",n=e-1;n<r.length;n++)t+=r[n];return t};e.cutting=function(r){for(var e=[],t=0;t<r.length;t++)r[t]&&e.push(r[t]);return e};e.isSheetVale=function(r){return-1!==(r=r.toUpperCase()).search(/[\u4E00-\u9FA50-9a-zA-Z]+![A-Za-z]+\$\d+/)||(-1!==r.search(/[\u4E00-\u9FA50-9a-zA-Z]+!\$[A-Za-z]+\d+/)||(-1!==r.search(/[\u4E00-\u9FA50-9a-zA-Z]+!\$[A-Za-z]+\$\d+/)||-1!==r.search(/[\u4E00-\u9FA50-9a-zA-Z]+![A-Za-z]+\d+/)))};e.positionAngle=function(r,e,t,n){var a,o,u,i,l=0,c=Math.abs((u=(o={x:e,y:n}).x-(a={x:r,y:t}).x,i=o.y-a.y,360*Math.atan(i/u)/(2*Math.PI)));return r<e&&t<n?l=1:r>e&&t<n?l=2:r<e&&t>n?l=3:r>e&&t>n&&(l=4),1===l&&c<45?l=3:2===l&&c>30?l=1:3===l&&c>30?l=4:4===l&&c<45?l=2:l};e.isAbsoluteValue=function(r){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return r=r.toUpperCase(),1===e?-1!==r.search(/^\$[A-Z]+\$\d+$/)?3:-1!==r.search(/^\$[A-Z]+\d+$/)?1:-1!==r.search(/^[A-Z]+\$\d+$/)&&2:3===e?-1!==r.search(/^\$[A-Z]+\$\d+$/)||(-1!==r.search(/^[A-Z]+\d+$/)||(-1!==r.search(/^\$[A-Z]+\d+$/)||-1!==r.search(/^[A-Z]+\$\d+$/))):4!==e?5===e?-1!==r.search(/^[A-Z]+\d+:\$[A-Z]+\d+$/)?8:-1!==r.search(/^[A-Z]+\d+:[A-Z]+\$\d+$/)?9:-1!==r.search(/^[A-Z]+\$\d+:[A-Z]+\d+$/)?10:-1!==r.search(/^\$[A-Z]+\d+:[A-Z]+\d+$/)?11:-1!==r.search(/^\$[A-Z]+\$\d+$/)?3:-1!==r.search(/^[A-Z]+\d+$/)?12:-1!==r.search(/^[A-Z]+\d+:[A-Z]+\d+$/)?13:-1!==r.search(/^\$[A-Z]+\d+$/)?1:-1!==r.search(/^[A-Z]+\$\d+$/)?2:-1!==r.search(/^[A-Z]+\$\d+:[A-Z]+\$\d+$/)?4:-1!==r.search(/^[A-Z]+\$\d+:\$[A-Z]+\d+$/)?5:-1!==r.search(/^\$[A-Z]+\d+:[A-Z]+\$\d+$/)?6:-1!==r.search(/^\$[A-Z]+\d+:\$[A-Z]+\d+$/)&&7:6===e?-1!==(r=r.replace(/\$/g,"")).search(/^[A-Za-z]+\d+:[A-Za-z]+\d+$/):-1!==r.search(/^[A-Za-z]+\d+$/)||-1!==r.search(/^[A-Za-z]+\d+:[A-Za-z]+\d+$/):-1!==r.search(/^[A-Za-z]+\d+:[A-Za-z]+\d+$/)||void 0};e.splitStr=function(r){for(var e=r.split(/([(-\/,+，*\s=^&])/),t=[],n=0;n<e.length;n++){var a=1;if(e.length>n+1){var o=e[n+1];"("===e[n]?a=3:-1!==o.indexOf("(")&&(a=2)}3!==a&&(2===a?t.push(e[n]+"("):t.push(e[n]))}return t};e.cutting2=function(r){for(var e=r.split(/([(-\/,+，*\s=^&])/),t=0,n=[],a=0;a<e.length;a++)e[a]&&n.push(e[a]);for(var o=[],u=0;u<n.length;u++){var i=n[u].toUpperCase(),l=!0;if(n.length>u+1)-1!==n[u+1].indexOf("(")&&(l=!1);if(-1===i.search(/^[A-Z]+\d+$/)&&-1===i.search(/^\$[A-Z]+\$\d+$/)&&-1===i.search(/^[A-Z]+\$\d+$/)&&-1===i.search(/^\$[A-Z]+\d+$/)&&-1===i.search(/^[A-Za-z]+\d+:[A-Za-z]+\d+$/)||!l){if(-1!==i.replace(/\$/g,"").search(/^[A-Za-z]+\d+:[A-Za-z]+\d+$/)&&l){for(var c=0;c<n[u].length;c++)o.push({code:t,data:n[u][c]});t+=1}else for(var s=0;s<n[u].length;s++)o.push({code:-1,data:n[u][s]})}else{for(var d=0;d<n[u].length;d++)o.push({code:t,data:n[u][d]});t+=1}}return o}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,